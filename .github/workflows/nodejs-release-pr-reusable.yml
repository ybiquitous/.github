name: Node.js Release PR (reusable)

on:
  workflow_call:
    inputs:
      new-version:
        description: New version to release
        required: true
        type: string
      reviewers:
        description: Reviewers for the pull request (comma-separated)
        required: false
        type: string

jobs:
  release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    timeout-minutes: 10
    concurrency: ${{ github.workflow }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # for changelog generation from commit history

      - name: Set up Node.js LTS
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "lts/*"

      - name: Update npm to latest
        run: |
          npm install --global npm@latest
          echo "Successfully updated npm to $(npm -v)"

      - name: Install dependencies
        run: npm ci

      - name: Bump version
        id: bump-version
        env:
          NEW_VERSION: ${{ github.event.inputs.new-version }}
        run: |
          npm version "${NEW_VERSION}" --no-git-tag-version
          echo "new-version=$(jq -r '.version' package.json)" >> "${GITHUB_OUTPUT}"

      - name: Get additional info
        id: get-info
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "latest-tag=$(gh release view --json tagName --jq .tagName)" >> "${GITHUB_OUTPUT}"

      - name: Create pull request
        env:
          GH_TOKEN: ${{ github.token }}
          NEW_VERSION: ${{ steps.bump-version.outputs.new-version }}
          LATEST_TAG: ${{ steps.get-info.outputs.latest-tag }}
          REVIEWERS: ${{ github.event.inputs.reviewers }}
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"

          branch_name="release/v${NEW_VERSION}"
          commit_message="chore: release v${NEW_VERSION}"
          git checkout -b "${branch_name}"
          git commit -am "${commit_message}"
          git push origin "${branch_name}"

          cat <<EOF > "${RUNNER_TEMP}/pr_body.txt"
          This PR prepares the release of **v${NEW_VERSION}**.

          Changes: <${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/compare/${LATEST_TAG}...${branch_name}>

          This PR was generated by [this action run](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}).
          EOF

          gh pr create \
            --title "${commit_message}" \
            --body-file "${RUNNER_TEMP}/pr_body.txt" \
            --reviewer "${REVIEWERS}" \
            --assignee "${GITHUB_ACTOR}"

          pr_url=$(gh pr view --json url --jq '.url')
          echo "::notice::Created pull request for releasing v${NEW_VERSION}: ${pr_url}"
